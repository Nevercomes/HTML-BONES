<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-lazy-init="true">

    <description>Spring MVC Configuration</description>

    <!-- 加载根配置文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:html_bones.properties" />

    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <context:component-scan base-package="com.p2c.html_bones" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!--&lt;!&ndash; 将Jackson2HttpMessageConverter的默认格式化输出为false &ndash;&gt;-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                <!--<property name="supportedMediaTypes">-->
                    <!--<list><value>application/json;charset=UTF-8</value></list>-->
                <!--</property>-->
                <!--<property name="prettyPrint" value="false"/>-->
                <!--<property name="objectMapper">-->
                    <!--<bean class="com.thinkgem.jeesite.common.mapper.JsonMapper"></bean>-->
                <!--</property>-->
            <!--</bean>-->
            <!-- 使用XML格式输出数据 -->
            <!--<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">-->
                <!--<constructor-arg>-->
                    <!--<bean class="org.springframework.oxm.xstream.XStreamMarshaller">-->
                        <!--<property name="streamDriver">-->
                            <!--<bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>-->
                        <!--</property>-->
                        <!--<property name="annotatedClasses">-->
                            <!--<list>-->
                                <!--<value>com.thinkgem.jeesite.common.persistence.BaseEntity</value>-->
                                <!--<value>com.thinkgem.jeesite.common.supcan.treelist.TreeList</value>-->
                                <!--<value>com.thinkgem.jeesite.common.supcan.treelist.cols.Col</value>-->
                                <!--<value>com.thinkgem.jeesite.common.supcan.treelist.cols.Group</value>-->
                            <!--</list>-->
                        <!--</property>-->
                    <!--</bean>-->
                <!--</constructor-arg>-->
                <!--<property name="supportedMediaTypes" value="application/xml"></property>-->
            <!--</bean>-->
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes" >
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
    </bean>

    <!-- 定义视图文件解析 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="${web.view.prefix}"/>
        <property name="suffix" value="${web.view.suffix}"/>
    </bean>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>

    <!-- 定义无Controller的path<->view直接映射 -->
    <!--<mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>-->

</beans>